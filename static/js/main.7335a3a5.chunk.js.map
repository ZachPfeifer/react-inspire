{"version":3,"sources":["components/quote/Quote.js","components/weather/Weather.js","components/clock/Clock.js","components/todos/TodoItem.js","components/todos/Todos.js","components/todos/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["Quote","className","this","props","quote","author","body","tags","Component","Weather","console","log","weather","name","sys","country","main","temp","toFixed","details","description","onClick","window","location","reload","MyClock","state","date","Date","setInterval","setState","toLocaleTimeString","updateTime","TodoItem","Strikethrough","textDecoration","todo","completed","_id","style","type","onChange","markComplete","bind","deleteTodo","Todos","todos","map","key","AddTodo","e","target","value","onSubmit","preventDefault","addTodo","placeholder","App","image","Axios","delete","then","res","filter","post","data","get","large_url","backgroundImage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7335a3a5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nexport default class Quote extends Component {\r\n  render() {\r\n    // console.log(this.props.quote)// Shows props from state on app.js\r\n\r\n    return (\r\n      < div className=\"card text-white bg-dark mb-3 card-size quotes-pos\" >\r\n        <div className=\"card-header\">Quote of the Day</div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{this.props.quote.author}</h5><h5>Once Said:</h5>\r\n          <p className=\"card-text\">\r\n            <i>\"{this.props.quote.body}\"</i>\r\n            <br />\r\n            #{this.props.quote.tags}\r\n          </p>\r\n        </div>\r\n      </div >\r\n\r\n\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Weather extends Component {\r\n  render() {\r\n    console.log(this.props) //hows props from state on app.js\r\n    //        description: data.weather[0].description,\r\n\r\n    function refreshPage() {\r\n      window.location.reload(false);\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"card card-size text-center w-25 p-2 text-white bg-dark mb-3 weather-pos\">\r\n        <div className=\"card-header\">\r\n          <h4><b>Today's Weather</b></h4>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            {this.props.weather.name}, {this.props.sys.country}\r\n            <br />\r\n            <i className=\"fas fa-cloud-sun\"></i> | {((this.props.main.temp - 273.15) * 1.8 + 32).toFixed(0)}Â°F\r\n          </h5>\r\n          <h5>Condition: {this.props.details.description}</h5>\r\n          {/* <p className=\"card-text\">\r\n            {this.props.weather.visibility}\r\n            <br />\r\n            Sunrise: {this.props.sys.sunrise}\r\n            <br />\r\n            Sunset: {this.props.sys.sunset}\r\n          </p> */}\r\n          <button className=\"btn btn-secondary\" onClick={refreshPage}>Refresh</button>\r\n        </div>\r\n        <div className=\"card-footer text-muted\">\r\n          Today\r\n          </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MyClock extends Component {\r\n\r\n  state = {\r\n    date: new Date()\r\n  }\r\n\r\n  updateTime() {\r\n    setInterval(() => {\r\n      this.setState({ date: new Date() })\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"clock\">\r\n        <div className=\"clock-pos\">{this.state.date.toLocaleTimeString()}</div>\r\n        {this.updateTime()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","//RCE SNIPPET\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default class TodoItem extends Component {\r\n\r\n  Strikethrough = () => {\r\n    return {\r\n      textDecoration: this.props.todo.completed ?\r\n        'line-through' : 'none',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { _id, description } = this.props.todo //Alias out long prop\r\n    return (\r\n      <div className=\"row\">\r\n        <div\r\n          className=\"col\"\r\n          style={this.Strikethrough()}>\r\n          <p>\r\n            <input\r\n              className=\"strikethrough largerCheckbox\"\r\n              type=\"checkbox\"\r\n              onChange={this.props.markComplete.bind(this, _id)}\r\n            />\r\n            {description}\r\n            <button\r\n              className=\"btn btn-danger redx float-right mx-auto\"\r\n              onClick={this.props.deleteTodo.bind(this, _id)}> X</button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired\r\n}\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem.js'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Todos extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.props.todos)// Shows props from state on app.js\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo._id} todo={todo} markComplete={this.props.markComplete} deleteTodo={this.props.deleteTodo} />\r\n    ));\r\n  }\r\n}\r\n\r\n\r\n//PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Todos;\r\n","//rce quick format\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class AddTodo extends Component {\r\n\r\n  state = {\r\n    description: ''\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value }); //Looks for change in Add Todo Input (looks at name or value)\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.addTodo(this.state.description)\r\n    this.setState({ description: '' })\r\n  }\r\n\r\n  //Add Todo\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"input-group mt-2\"\r\n        onSubmit={this.onSubmit}>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='description'\r\n          placeholder='Add Todo...'\r\n          value={this.state.description}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          className='btn btn-secondary'\r\n          type='submit'\r\n          value='Submit'\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n//PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\n\r\n","import React, { Component } from 'react'\nimport Axios from 'axios'\n// import Clock from 'react-clock';\nimport './App.css';\n// import Background from './components/background/Background'\nimport Quote from './components/quote/Quote'\nimport Weather from './components/weather/Weather'\nimport MyClock from './components/clock/Clock'\nimport Todos from './components/todos/Todos.js';\nimport AddTodo from './components/todos/AddTodo.js';\n\n\n\nexport default class App extends Component {\n\n  //SECTION State\n  state = {\n    image: {},\n    quote: {},\n    weather: [],\n    main: {},\n    sys: {},\n    details: [],\n    // date: new Date(),\n    todos: []\n\n  }\n\n  //SECTION API \n  componentDidMount() {\n    // GET BACKGROUND IMAGE\n    Axios.get('//bcw-sandbox.herokuapp.com/api/images')\n      .then(res => this.setState({\n        image: res.data.large_url\n      }))\n\n    //GET QUOTE\n    Axios.get('//bcw-sandbox.herokuapp.com/api/quotes')\n      .then(res => this.setState({\n        quote: res.data.quote\n      }))\n\n    //GET WEATHER\n    Axios.get('//bcw-sandbox.herokuapp.com/api/weather')\n      .then(res => this.setState({\n        weather: res.data,\n        main: res.data.main,\n        // main: ((res.data.main.temp - 273.15) * 1.8 + 32).toFixed(0),\n        sys: res.data.sys,\n        details: res.data.weather[0]\n      }))\n    // setInterval(\n    //   () => this.setState({ date: new Date() }),\n    //   1000\n    // );\n\n    //GET TODOS\n    Axios.get('https://bcw-sandbox.herokuapp.com/api/zachp/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data.data }))\n  }\n  // Delete TODOS \n  deleteTodo = (_id) => {\n    Axios.delete(`https://bcw-sandbox.herokuapp.com/api/zachp/todos/${_id}`)\n      .then(res => this.setState({\n        todos:\n          [...this.state.todos.filter(todo => todo._id !== _id)]\n      })\n      )\n  }\n  //Add TODOS \n  addTodo = (description) => {\n    Axios.post('https://bcw-sandbox.herokuapp.com/api/zachp/todos/', {\n      description: description,\n      completed: false\n    })\n      .then(res => this.setState({\n        todos:\n          [...this.state.todos, res.data.data]\n      })\n      )\n  }\n  //Toggle Complete\n  markComplete = (_id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo._id === _id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    })\n  }\n\n\n  //SECTION APP Render\n  render() {\n    // console.log(this.state.image)\n    // console.log(this.state.quote)\n    // console.log(this.state.weather)\n    //console.log(this.state.todos)\n\n\n    return (\n      <div className=\"App container-fluid\"\n        style={{ backgroundImage: `url(${this.state.image})` }}\n      >\n        {/* <Background image={this.state.image} /> */}\n\n        <Weather\n          weather={this.state.weather}\n          main={this.state.main}\n          sys={this.state.sys}\n          details={this.state.details} />\n\n        <Quote quote={this.state.quote} />\n        <MyClock />\n        {/* <Clock\n            value={this.state.date}\n          /> */}\n        <div className=\"card text-white bg-dark mx-auto todo\">\n          <h1 className=\"text-center\"><b>To Do List: </b></h1>\n          <div className=\"card-body\">\n            <Todos\n              todos={this.state.todos}\n              markComplete={this.markComplete}\n              deleteTodo={this.deleteTodo}\n            />\n            <div className=\"card-footer\">\n              <AddTodo addTodo={this.addTodo} />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'suncalc'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}